<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gonzih's dev blog]]></title>
  <link href="http://gonzih.github.com/atom.xml" rel="self"/>
  <link href="http://gonzih.github.com/"/>
  <updated>2012-12-04T14:05:40+03:00</updated>
  <id>http://gonzih.github.com/</id>
  <author>
    <name><![CDATA[Max Gonzih ]]></name>
    <email><![CDATA[gonzih@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Programmer Dvorak and switching workspaces in XMonad]]></title>
    <link href="http://gonzih.github.com/blog/2012/10/08/programmer-dvorak-and-switching-workspaces-in-xmonad/"/>
    <updated>2012-10-08T16:31:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/10/08/programmer-dvorak-and-switching-workspaces-in-xmonad</id>
    <content type="html"><![CDATA[<p>Recently I migarted from awesome to xmonad. I&#8217;m Programmer Dvorak freak, so I stuck with controlling current workspace from numbers row. First hack was to use functional keys [F1..F12] like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='haskell'><span class='line'><span class="c1">-- mod-[F1..F12]       Switch to workspace N</span>
</span><span class='line'><span class="c1">-- mod-shift-[F1..F12] Move client to workspace N</span>
</span><span class='line'><span class="c1">--</span>
</span><span class='line'><span class="p">[((</span><span class="n">m</span> <span class="o">.|.</span> <span class="n">modm</span><span class="p">,</span> <span class="n">k</span><span class="p">),</span> <span class="n">windows</span> <span class="o">$</span> <span class="n">f</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>    <span class="o">|</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="ow">&lt;-</span> <span class="n">zip</span> <span class="p">(</span><span class="kt">XMonad</span><span class="o">.</span><span class="n">workspaces</span> <span class="n">conf</span><span class="p">)</span> <span class="p">[</span><span class="n">xK_F1</span> <span class="o">..</span> <span class="n">xK_F12</span><span class="p">]</span>
</span><span class='line'>    <span class="p">,</span> <span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span> <span class="ow">&lt;-</span> <span class="p">[(</span><span class="kt">W</span><span class="o">.</span><span class="n">greedyView</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="p">(</span><span class="kt">W</span><span class="o">.</span><span class="n">shift</span><span class="p">,</span> <span class="n">shiftMask</span><span class="p">)]]</span>
</span></code></pre></td></tr></table></div></figure>


<p>But after some research I found that I can detect key symbol using xev command. Here is my latest solution:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='haskell'><span class='line'><span class="c1">-- Programmer Dvorak</span>
</span><span class='line'><span class="c1">-- mod-[1..9]       Switch to workspace N</span>
</span><span class='line'><span class="c1">-- mod-shift-[1..9] Move client to workspace N</span>
</span><span class='line'><span class="c1">--</span>
</span><span class='line'><span class="p">[((</span><span class="n">m</span> <span class="o">.|.</span> <span class="n">modm</span><span class="p">,</span> <span class="n">k</span><span class="p">),</span> <span class="n">windows</span> <span class="o">$</span> <span class="n">f</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>    <span class="o">|</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="ow">&lt;-</span> <span class="n">zip</span> <span class="p">(</span><span class="kt">XMonad</span><span class="o">.</span><span class="n">workspaces</span> <span class="n">conf</span><span class="p">)</span> <span class="p">[</span><span class="n">xK_ampersand</span><span class="p">,</span> <span class="n">xK_bracketleft</span><span class="p">,</span> <span class="n">xK_braceleft</span><span class="p">,</span> <span class="n">xK_braceright</span><span class="p">,</span> <span class="n">xK_parenleft</span>
</span><span class='line'>                                             <span class="p">,</span><span class="n">xK_equal</span><span class="p">,</span> <span class="n">xK_asterisk</span><span class="p">,</span> <span class="n">xK_parenright</span><span class="p">,</span> <span class="n">xK_plus</span><span class="p">,</span> <span class="n">xK_bracketright</span><span class="p">,</span> <span class="n">xK_exclam</span><span class="p">]</span>
</span><span class='line'>    <span class="p">,</span> <span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span> <span class="ow">&lt;-</span> <span class="p">[(</span><span class="kt">W</span><span class="o">.</span><span class="n">greedyView</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="p">(</span><span class="kt">W</span><span class="o">.</span><span class="n">shift</span><span class="p">,</span> <span class="n">shiftMask</span><span class="p">)]]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hooray! It works!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure on BeagleBone: OpenJDK vs Oracle Embedded JRE benchmark]]></title>
    <link href="http://gonzih.github.com/blog/2012/09/07/clojure-on-beaglebone-openjdk-vs-oracle-embedded-jre-benchmark/"/>
    <updated>2012-09-07T16:20:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/09/07/clojure-on-beaglebone-openjdk-vs-oracle-embedded-jre-benchmark</id>
    <content type="html"><![CDATA[<p>After installing Embedded JRE on BeagleBone I decided to benchmark it against OpenJDK.</p>

<!-- more -->


<p>BeagleBone is running Ubuntu 12.04.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; cat /etc/*-release
</span><span class='line'>DISTRIB_ID=Ubuntu
</span><span class='line'>DISTRIB_RELEASE=12.04
</span><span class='line'>DISTRIB_CODENAME=precise
</span><span class='line'>DISTRIB_DESCRIPTION="Ubuntu 12.04 LTS"</span></code></pre></td></tr></table></div></figure>


<p>BeagleBone CPU is running on 500Mhz.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; cpufreq-info | grep 'current CPU'
</span><span class='line'>current CPU frequency is 500 MHz.</span></code></pre></td></tr></table></div></figure>


<p>Clojure version is 1.4.0.</p>

<p>Benchmark code is from <a href="http://nakkaya.com/2011/03/15/clojure-on-the-beagleboard/">nakkaya&#8217;s post</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="kd">ns </span><span class="nv">benchmark.core</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">factorial</span> <span class="p">[</span><span class="nv">x</span><span class="p">]</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">reduce * </span><span class="p">(</span><span class="nb">range </span><span class="mi">1</span><span class="nv">N</span> <span class="p">(</span><span class="nb">inc </span><span class="nv">x</span><span class="p">))))</span>
</span><span class='line'><span class="c1">;                   ^ integerOverflow fix</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">fib</span> <span class="p">[</span><span class="nv">n</span><span class="p">]</span>
</span><span class='line'>  <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt;= </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">1</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nf">fib</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">))</span> <span class="p">(</span><span class="nf">fib</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">2</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">sort-seq</span> <span class="p">[]</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">sort </span><span class="p">(</span><span class="nb">repeat </span><span class="mi">100000</span> <span class="p">(</span><span class="nb">rand-int </span><span class="mi">2000000</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">time-it</span> <span class="p">[</span><span class="nv">fn</span><span class="p">]</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let </span><span class="p">[</span><span class="nv">values</span>  <span class="p">(</span><span class="nb">for </span><span class="p">[</span><span class="nv">i</span> <span class="p">(</span><span class="nb">range </span><span class="mi">200</span><span class="p">)]</span> <span class="p">(</span><span class="nb">with-out-str </span><span class="p">(</span><span class="nb">time </span><span class="p">(</span><span class="nf">fn</span><span class="p">))))</span>
</span><span class='line'>        <span class="nv">doubles</span> <span class="p">(</span><span class="nb">map </span><span class="o">#</span><span class="p">(</span><span class="nf">Double.</span> <span class="p">(</span><span class="nb">nth </span><span class="p">(</span><span class="nf">.split</span> <span class="nv">%</span> <span class="s">&quot; &quot;</span><span class="p">)</span> <span class="mi">2</span><span class="p">))</span> <span class="nv">values</span><span class="p">)]</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">apply + </span><span class="nv">doubles</span><span class="p">)</span> <span class="p">(</span><span class="nb">count </span><span class="nv">doubles</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">-main</span> <span class="p">[]</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">println </span><span class="s">&quot;(factorial 5000) \t Avg: &quot;</span> <span class="p">(</span><span class="nf">time-it</span> <span class="o">#</span><span class="p">(</span><span class="nf">factorial</span> <span class="mi">5000</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">println </span><span class="s">&quot;(fib 20) \t Avg: &quot;</span> <span class="p">(</span><span class="nf">time-it</span> <span class="o">#</span><span class="p">(</span><span class="nf">fib</span> <span class="mi">20</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">println </span><span class="s">&quot;(sort-seq) \t Avg: &quot;</span> <span class="p">(</span><span class="nf">time-it</span> <span class="o">#</span><span class="p">(</span><span class="nf">sort-seq</span><span class="p">))))</span>
</span></code></pre></td></tr></table></div></figure>


<p>So here the numbers:</p>

<p>OpenJDK:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="nb">&gt; </span><span class="nv">sudo</span> <span class="nv">apt-get</span> <span class="nv">install</span> <span class="nv">openjdk-7-jre-headless</span>
</span><span class='line'>
</span><span class='line'><span class="nb">&gt; </span><span class="nv">java</span> <span class="nv">-version</span>
</span><span class='line'><span class="nv">java</span> <span class="nv">version</span> <span class="s">&quot;1.7.0_03&quot;</span>
</span><span class='line'><span class="nv">OpenJDK</span> <span class="nv">Runtime</span> <span class="nv">Environment</span> <span class="p">(</span><span class="nf">IcedTea7</span> <span class="mf">2.1</span><span class="nv">.1pre</span><span class="p">)</span> <span class="p">(</span><span class="mi">7</span><span class="o">~</span><span class="nv">u3-2.1.1</span><span class="o">~</span><span class="nv">pre1-1ubuntu3</span><span class="p">)</span>
</span><span class='line'><span class="nv">OpenJDK</span> <span class="nv">Zero</span> <span class="nv">VM</span> <span class="p">(</span><span class="nf">build</span> <span class="mf">22.0</span><span class="nv">-b10</span>, <span class="nv">mixed</span> <span class="nv">mode</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">&gt; </span><span class="nv">ps</span> <span class="nv">-eu</span>
</span><span class='line'><span class="nv">%CPU</span> <span class="nv">%MEM</span> <span class="nv">VSZ</span>    <span class="nv">RSS</span>   <span class="nv">TTY</span>    <span class="nv">STAT</span> <span class="nv">START</span>  <span class="nv">TIME</span> <span class="nv">COMMAND</span>
</span><span class='line'><span class="mf">96.9</span> <span class="mf">16.3</span> <span class="mi">267932</span> <span class="mi">41172</span> <span class="nv">pts/1</span>  <span class="nv">Sl+</span>  <span class="mi">09</span><span class="ss">:07</span>  <span class="mi">9</span><span class="ss">:28</span> <span class="nv">java</span>
</span><span class='line'>
</span><span class='line'><span class="nb">&gt; </span><span class="nv">lein</span> <span class="nv">run</span>
</span><span class='line'><span class="p">(</span><span class="nf">factorial</span> <span class="mi">5000</span><span class="p">)</span> <span class="nv">Avg</span><span class="err">:</span>  <span class="mf">1681.9940255249999</span>
</span><span class='line'><span class="p">(</span><span class="nf">fib</span> <span class="mi">20</span><span class="p">)</span>         <span class="nv">Avg</span><span class="err">:</span>  <span class="mf">490.16940197000025</span>
</span><span class='line'><span class="p">(</span><span class="nf">sort-seq</span><span class="p">)</span>       <span class="nv">Avg</span><span class="err">:</span>  <span class="mf">7129.159457125003</span>
</span></code></pre></td></tr></table></div></figure>


<p>Embedded JRE:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="nb">&gt; </span><span class="nv">java</span> <span class="nv">-version</span>
</span><span class='line'><span class="nv">java</span> <span class="nv">version</span> <span class="s">&quot;1.7.0_06&quot;</span>
</span><span class='line'><span class="nv">Java</span><span class="p">(</span><span class="nf">TM</span><span class="p">)</span> <span class="nv">SE</span> <span class="nv">Embedded</span> <span class="nv">Runtime</span> <span class="nv">Environment</span> <span class="p">(</span><span class="nf">build</span> <span class="mf">1.7</span><span class="nv">.0_06-b24</span>, <span class="nv">headless</span><span class="p">)</span>
</span><span class='line'><span class="nv">Java</span> <span class="nv">HotSpot</span><span class="p">(</span><span class="nf">TM</span><span class="p">)</span> <span class="nv">Embedded</span> <span class="nv">Client</span> <span class="nv">VM</span> <span class="p">(</span><span class="nf">build</span> <span class="mf">23.2</span><span class="nv">-b09</span>, <span class="nv">mixed</span> <span class="nv">mode</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">&gt; </span><span class="nv">ps</span> <span class="nv">-eu</span>
</span><span class='line'><span class="nv">%CPU</span> <span class="nv">%MEM</span> <span class="nv">VSZ</span>    <span class="nv">RSS</span>   <span class="nv">TTY</span>    <span class="nv">STAT</span> <span class="nv">START</span>  <span class="nv">TIME</span> <span class="nv">COMMAND</span>
</span><span class='line'><span class="mf">91.2</span> <span class="mf">16.4</span> <span class="mi">221740</span> <span class="mi">41372</span> <span class="nv">pts/1</span>  <span class="nv">Sl+</span>  <span class="mi">08</span><span class="ss">:28</span>  <span class="mi">5</span><span class="ss">:16</span> <span class="nv">java</span>
</span><span class='line'>
</span><span class='line'><span class="nb">&gt; </span><span class="nv">lein</span> <span class="nv">run</span>
</span><span class='line'><span class="p">(</span><span class="nf">factorial</span> <span class="mi">5000</span><span class="p">)</span> <span class="nv">Avg</span><span class="err">:</span>  <span class="mf">1061.0568413899998</span>
</span><span class='line'><span class="p">(</span><span class="nf">fib</span> <span class="mi">20</span><span class="p">)</span>         <span class="nv">Avg</span><span class="err">:</span>  <span class="mf">30.877820054999983</span>
</span><span class='line'><span class="p">(</span><span class="nf">sort-seq</span><span class="p">)</span>       <span class="nv">Avg</span><span class="err">:</span>  <span class="mf">1729.9035516600002</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here you are. Better performance and memory usage.
Good Job, Embedded Java Team :)
Looking forward for hardfloat ABI version to test it on Raspberry Pi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Oracle Embedded Java on Beaglebone and Ubuntu Issue]]></title>
    <link href="http://gonzih.github.com/blog/2012/09/03/installing-java-on-beaglebone-and-ubuntu-issue/"/>
    <updated>2012-09-03T20:58:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/09/03/installing-java-on-beaglebone-and-ubuntu-issue</id>
    <content type="html"><![CDATA[<p>Recently I was playing with Clojure on Beaglebone and decided to give a try to Oracle&#8217;s new Embedded JRE.
But after downloading JRE from Oracle website (with filling useless stupid forms) I received following error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>java: no such file or directory
</span></code></pre></td></tr></table></div></figure>


<p>So here is fix:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install -y libc6-armel libsfgcc1
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://groups.google.com/forum/?fromgroups=#!topic/pandaboard/bb53tEV5GKA">via</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arch Linux migrated to GRUB2]]></title>
    <link href="http://gonzih.github.com/blog/2012/07/20/arch-linux-migrated-to-grub2/"/>
    <updated>2012-07-20T22:13:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/07/20/arch-linux-migrated-to-grub2</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/ASSDN.png" alt="My current GRUB2 theme" /></p>

<p>Great news everyone! Today Arch Linux officially switched to GRUB2!</p>

<ul>
<li><a href="http://www.archlinux.org/news/grub-legacy-no-longer-supported/">Post on Arch News</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Grub#Generate_GRUB2_BIOS_Config_file">Migration information is here</a></li>
<li><a href="http://www.reddit.com/r/linux/comments/w7mux/i_make_grub_themes_heres_my_newest_one/">My current GRUB2 theme</a></li>
<li><a href="http://gnome-look.org/usermanager/search.php?username=LegendaryBibo&amp;action=contents">More GRUB2 themes</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix Broken Comments Count for Disqus]]></title>
    <link href="http://gonzih.github.com/blog/2012/07/19/fix-broken-comments-count-for-disqus/"/>
    <updated>2012-07-19T18:16:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/07/19/fix-broken-comments-count-for-disqus</id>
    <content type="html"><![CDATA[<p>I just figured out that my disqus account was attached to gonzih.github.com but my blog was actually hosted using blog.gonzih.org domain.
That is why comments count was equal to 0 for every post on my index page.
To fix that go to admin ui in disqus and use domain migration tool.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Internet Defense League]]></title>
    <link href="http://gonzih.github.com/blog/2012/07/19/the-internet-defense-league/"/>
    <updated>2012-07-19T14:34:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/07/19/the-internet-defense-league</id>
    <content type="html"><![CDATA[<p><img src="http://internetdefenseleague.org/images/launch/cat_sky.jpg" alt="IDL Launch" /></p>

<blockquote><p>The <a href="http://sopastrike.com/">Internet Blackout</a> was just the beginning. Together, our websites and personal networks can mobilize the planet to defend the internet from bad laws &amp; monopolies. Are you in?</p></blockquote>

<p>Join <strong>Internet Defence League</strong> at <a href="http://internetdefenseleague.org/">internetdefenseleague.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use Magnet Links with RTorrent]]></title>
    <link href="http://gonzih.github.com/blog/2012/02/17/how-to-use-magnet-links-with-rtorrent/"/>
    <updated>2012-02-17T18:04:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2012/02/17/how-to-use-magnet-links-with-rtorrent</id>
    <content type="html"><![CDATA[<p>Here simple script that will add magnet link as torrent file to your watch directory. You can use it from command line or set it in your browser to handle magnet links.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nb">cd</span> ~/watch    <span class="c"># set your watch directory here</span>
</span><span class='line'><span class="o">[[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span>~ <span class="nv">xt</span><span class="o">=</span>urn:btih:<span class="o">([</span>^&amp;/<span class="o">]</span>+<span class="o">)</span> <span class="o">]]</span> <span class="o">||</span> <span class="nb">exit</span>;
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;d10:magnet-uri${#1}:${1}e&quot;</span> &gt; <span class="s2">&quot;meta-${BASH_REMATCH[1]}.torrent&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://libtorrent.rakshasa.no/ticket/2100">via</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nice Vim Keys Map]]></title>
    <link href="http://gonzih.github.com/blog/2011/10/18/nice-vim-keys-map/"/>
    <updated>2011-10-18T20:05:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/10/18/nice-vim-keys-map</id>
    <content type="html"><![CDATA[<p>Large <a href="https://github.com/Gonzih/vim-keymap/raw/master/new/new.png">image</a> (2.4 Megabytes).</p>

<p><a href="https://github.com/Gonzih/vim-keymap/">Source on github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set New PostgreSQL Databases Encoding to Unicode]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/30/set-new-postgresql-databases-encoding-to-unicode/"/>
    <updated>2011-09-30T10:42:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/30/set-new-postgresql-databases-encoding-to-unicode</id>
    <content type="html"><![CDATA[<p>You must change encoding for template1. For do that run following.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>su - postgres
</span><span class='line'>psql
</span><span class='line'>
</span><span class='line'>UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
</span><span class='line'>DROP DATABASE template1;
</span><span class='line'>CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UNICODE';
</span><span class='line'>UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';
</span><span class='line'>
</span><span class='line'>#recomended
</span><span class='line'>\c template1
</span><span class='line'>VACUUM FREEZE;</span></code></pre></td></tr></table></div></figure>


<p><a href="http://journal.tianhao.info/2010/12/postgresql-change-default-encoding-of-new-databases-to-utf-8-optional/">via</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nice Rspec 2 Syntax Cheat Sheet]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/22/nice-rspec-2-syntax-cheat-sheet/"/>
    <updated>2011-09-22T21:26:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/22/nice-rspec-2-syntax-cheat-sheet</id>
    <content type="html"><![CDATA[<!-- more -->


<div><script src='https://gist.github.com/663876.js?file='></script>
<noscript><pre><code># RSpec 2.0 syntax Cheet Sheet by http://ApproachE.com

# defining spec within a module will automatically pick Player::MovieList as a 'subject' (see below)
module Player
    describe MovieList, &quot;with optional description&quot; do
          
      it &quot;is pending example, so that you can write ones quickly&quot;
      
      it &quot;is already working example that we want to suspend from failing temporarily&quot; do
        pending(&quot;working on another feature that temporarily breaks this one&quot;)
        # actual test code is here, will never be reached
      end
      
      it &quot;is pending when failing&quot; do
          pending &quot;This will be marked as pending when the block will fail, otherwise (on success) will fail telling 'Why am I pending if I pass?'&quot; do
              1.should == 2 # will mark example as pending
              2.should == 2 # will fail asking to remove pending status of example
          end
      end
      
      # this will automatically generate name of the example based on the expectations inside it ~ 'it' with no description
      specify { [1,2,3].should have(3).items }
      
      #any helper methods, before/after, modules etc declared in the outer group are available in the inner group.
      describe &quot;outer&quot; do
          before(:each) { puts &quot;first&quot; }
          describe &quot;inner&quot; do
            before(:each) { puts &quot;second&quot; }
            it { puts &quot;third&quot;}
            after(:each) { puts &quot;fourth&quot; }
          end
          after(:each) { puts &quot;fifth&quot; }
      end

      # 'describe' and 'context' are equivalent
      # I prefer to use 'context' for defining an 'environment'
      context &quot;when first created&quot; do
        it &quot;is empty&quot; do
          movie_list = MovieList.new
          movie_list.should be_empty
        end
      end

      # I prefer to use 'describe' for nouns, verbs; defining a nested set of specifications
      describe &quot;forward&quot; do
        it &quot;should jump to a next movie&quot; do
          next_movie = MovieList.new(2).forward
          next_movie.track_number.should == 2
        end
      end
    end
    
    it &quot;will have default subject that corresponds to the instance of first parameter in 'describe'&quot; do
        subject.class.should be == MovieList
    end
    # unless subject is set explicitly
    subject { MovieList.new(10) } # approximately similar to 'before(:each)'
    # no need to use 'subject.should', use 'should'
    specify { should have(10).items } # same as below
    specify { subject.should have(10).items }
    

    # similar to specify { subject.track_number.should == 1}
    its(:track_number) { should == 1 }

    context &quot;specs set-up&quot; do
        # we can run setup before each examle, or all of them
        before(:each) do        
            @new_on_each_example = YourObject.new
        end
        before do
            @new_on_each_spec_less_verbose = YourObject.new
        end
        before(:all) do
            # Avoid using it as it will bring the 'shared state' into unit tests
            @same_instance_for_all_examples_within_the_context = YourObject.new
        end     
        it &quot;can access attributes defined in 'before'&quot; do
            @new_on_each_example.should_not be_nil
            @same_instance_for_all_examples_within_the_context.should_not be_nil
        end
        
        # cleanup code can be run the same way using 'after' instead of 'before'
        # Avoid using 'after'       
        # we can wrap examples: before + after + manual handling
        # In most cases 'before' + 'after' will work better.
        around do |example|         
            DB.transaction { example.run }
            # should handle errors manually, so do not do something like:
            # DB.start_transaction
            # example.run
            # DB.rollback_transaction
        end
        it &quot;should run within a transaction&quot; do
            MovieList.new.save!
        end     
        
        let(:new_on_each_example) { ObjectPerExample.new }
        it &quot;can use method defined by 'let'&quot; do
            new_on_each_example.should_not be_nil
            # the object is memoized, so
            new_on_each_example.should == new_on_each_example
        end
        
        # defining helper methods within context may be more useful than setup
        def forward(times) do
            list = MoviewList.new(10)
            list.forward(times).track_number
        end
        it &quot;can use it multiple times&quot; do
            forward(1).should == 1
            forward(2).should == 2
            forward(10).should == 1
        end
        
        # using 'yield' with helper methods
        def given_thing_with(options)
            yield Thing.new do |thing|
                thing.set_status(options[:status])
            end
        end
        it &quot;should do something when ok&quot; do
            given_thing_with(:status =&gt; 'ok') do |thing|
                thing.do_fancy_stuff(1, true, :move =&gt; 'left', :obstacles =&gt; nil)
            end
        end
        
        
        # helpers can come from modules
        module Helpers
            def shared_help
                [1,2,3]
            end
        end
        include Helpers
        it &quot;can use helpers from Module&quot; do
            shared_help.should == [1,2,3]
        end
        # or this module can be included for ALL example groups automatically during configuration:
        # RSpec.configure do |config|
        #   config.include Helpers
        # end
    end
    
    
    context &quot;built-it stubbing, faking, mocking&quot; do
        it &quot;can stub&quot; do
            source = double('source')           
            source.stub(:fetch) { [1,2,3,4,5] }         
            source.stub(:fetch_from).and_return([1,2]) # other way          
            MovieList.stub(:find).and_return(MovieList.new) # stub class method
            
            implementing = double('source')
            implementing.stub(:fetch) do |count|
                count == 5 ? [1,2,3] : [4,5,6,7] # provide stub logic here, easy to use for Fakes
            end         
            # easily stub chains of calls
            Blog.stub_chain(:posts, :published, :recent).and_return([1,2,3])
            Blog.posts.published.recent.should == [1,2,3]
        end
        it &quot;can ignore non-expected method calls (NullObject pattern)&quot; do
            source = double('source', :url =&gt; 'http://example.com').as_null_object           
            source.any_method_call_onwill_return_nil.should be_nil
            # the source mock object will record the 'any_method_call_onwill_return_nil' message internally though          
        end
        it &quot;can set expectations&quot; do
            source = double('source')
            # arguments
            source.should_receive(:fetch).with(10, &quot;abc&quot;).and_return([1,2]) # expecting arguments (10, &quot;abc&quot;) otherwise failing
            source.should_receive(:fetch).with(instance_of(Integer), &quot;abc&quot;).and_return([1,2]) # don't care about 1st argument as long as it is Integer
            source.should_receive(:fetch).with(10, anything).and_return([1,2]) # don't care about 2nd argument at all
            source.should_receive(:fetch).with(any_args) # same as not using 'with' - don't care about arguments
            source.should_receive(:fetch).with(no_args) # 0 arguments, otherwise fail
            source.should_receive(:fetch).with(hash_including(:count =&gt; 10, :url =&gt; 'abc')) # arg should be Hash with all the values mentioned
            source.should_receive(:fetch).with(hash_not_including(:timeout =&gt; 5)) # arg should be Hash that contains no ':timout=&gt;5'
            source.should_receive(:fetch).with(anything, /example/) # 2nd arg shuold match RegEx
            source.should_receive(:fetch).and_return([1], [1,2], [1,2,3]) # 1st call - [1], 2nd - [1,2], 3rd - [1,2,3], 4th - [1] and so on ...
            # expectation overrides stub
            source.stub(:fetch).and_return([1,2]) # will return [1,2] when called
            source.should_recieve(:fetch).and_return([3,4]) # prev been overriden and will return [3,4]
            # raising/throwing
            source.should_receive(:fetch).and_raise # raise Exception
            source.should_receive(:fetch).and_raise(ZeroDivisionError) # raise ZeroDivisionError
            source.should_receive(:fetch).and_raise(Exception.new('instance of aexception')) # raise given exception
            source.should_receive(:fetch).and_throw(:zero) # thro :zero                 
            # order
            source.should_receive(:first).ordered # order matters in relation to others marked as ordered
            source.should_receive(:dosnt_matter) # don't care about order as long as it is called
            source.should_receive(:second).ordered # must be called after 'first'
            # order is not enforced across different objects:
            double('a').should_receive(:a).ordered # not related to the next one
            double('b').should_receive(:b).ordered # not related to the prev one
            # how many times?
            source.should_recieve(:fetch).exactly(1)times
            source.should_recieve(:fetch).at_most(5)times
            source.should_recieve(:fetch).at_least(2)times
            source.should_recieve(:fetch).twice
            source.should_recieve(:fetch).once
            # negative expectations
            source.should_recieve(:fetch).never
            source.should_recieve(:fetch).exactly(0)times
            source.should_not_recieve(:fetch)           
            
            
            list = MovieList.new(source)
            # if source.fetch has not been called, then example will fail
        end
        
        context &quot;custom expectations&quot; do
            # define custom expection class somewhere
            class GreaterThanMatcher
                def initialize(expected)
                    @expected = expected
                end
                def description
                    # will generate proper failure message and name of the example
                    &quot;a number greater than #{@expected}&quot;
                end
                def ==(actual)
                    # this will be called from
                    actual &gt; @expected
                end
            end
            
            # add this method to the RSpec (see set-up for global configuration)
            def greater_than(floor)
                GreaterThanMatcher.new(floor)
            end
            
            it &quot;can be used in expectations&quot; do
                subject.should_recieve(:forward).with(greater_than 3)
                subject.forward(5)
            end
        end # custom matchers
    end # mocking
    

    
    
    
    # set of same examples shared accross multiple specs
    # shared_examples_for should be in a separate file and defined outside of 'describe'/'context'
    shared_examples_for &quot;any pizza&quot; do
        it &quot;tastes really good&quot; do
            @pizza.should taste_really_good
        end
    end
    
    # to include the shared examples, into example groups:
    # it will assume @pizza instance variable is available here
    it_behaves_like &quot;any pizza&quot;
    
    context 'defining examples dynamically - everybody knows that :)' do
        {2 =&gt; 4, 3 =&gt; 6, 10 =&gt; 20}.each do |input, output|
            it &quot;#{input} * 2 should be equal to #{output}&quot; do
                (input * 2).should == output
                # will produce examples:
                # - 2 * 2 should be equal to 4
                # - 3 * 2 should be equal to 6
                # - 10 * 2 should be equal to 20
            end
        end
    end
    
    
    context &quot;matchers&quot; do
        it &quot;shows built-in matchers&quot; do
            # TODO: describe ===, eql, equal
            1.should == 1
            1.should_not == 2 # NOT 1.should != 2
            1.should_not equal(2) # same as above
            1.should_not == 2
            5.should be &gt; 3
            5.should be &lt;= 5
            (1.251).should be_close(1.25, 0.005)
            (1.251).should be_within(0.005).of 1.25 # &gt;= RSpec 2.1
            &quot;reg exp&quot;.should =~ /exp/
            [1,2].should include(1)
            1.should respond_to(:to_s)
            
            true.should be_true
            0.should be_true
            &quot;this&quot;.should be_true
            
            lambda { Object.new.explodde! }.should raise_error(NameError)
            
            # nothing fits
            5.should satisfy { |it| it == 5 }
        end
        
        it &quot;shows cool things&quot; do
            count = 1
            expect {
                count = 3
            }.to change { count }.by(2)

            expect {
                # not changing
            }.to_not change { count }
            
            count = 1
            expect {
                count = 3
            }.to change { count }.to(3)
            
            count = 1
            expect {
                count = 3
            }.to change { count }from(1).to(3)
            
            # raise-rescue - exception handling
            expect {2 / 0}.to raise_error(&quot;divided by 0&quot;)
            expect {2 / 0}.to raise_error(/by 0/)
            expect {2 / 0}.to raise_error(ZeroDivisionError)
            
            # try-catch - expected circumstance handling
            lambda {  throw :room_is_full }.should throw_symbol(:room_is_full)
            
            # predicates
            nil.should be_nil #call nil.nil?
            [].should be_empty # calls [].empty?
            [1,2,3].should_not be_empty # calls [1,2,3].empty
            
            # convert anything that begins with have_ to a predicate on the target object beginning with has_
            {:id =&gt; 1}.has_key?(:id).should == true
            # can be written as
            {:id =&gt; 1}.should have_key(:id) # calls {:id =&gt; 1}.has_key?(:id)
            
            # collections           
            obj = {}
            def obj.numbers
             [1,2,3,4]
            end
            
            obj.should have(4).numbers # calls obj.numbers.length
            [1,2,3,4].should have(4).items # 'items' is 'reserved' to say &quot;ensure number of items on the collection&quot;
            [1,2,3,4].should be_any {|n| n % 2 == 0} # [1,2,3,4].any? {|n| n %% 2 == 0}.should be_true
            &quot;stringy&quot;.should have(7).charaters # same as items, just syntactic sugar
            [1,2,3,4].should have_exactly(24).items # same as 'have'
            obj.should have_at_least(3).numbers
            
            
        end
    end # built-in matchers
    
    
    
    
    
    context &quot;custom matchers&quot; do
        # TODO: describe multiple ways
        
        #define class
        class SimilarTo
            # mandatory - link to the object under test
            def initialize(it)
                # object under test
                @it = it
            end         
            # mandatory - check the positive condition
            def matches?(that)
                @that = that # save to use it in messages
                @that.to_s.downcase.should == @it.to_s.downcase
            end
            # optional - opoosite to mathch?
            def does_not_matche?(that)
                result = !matches?(that)
                @that, @it = @it, @that # swap for negative condition or additionally cusomtize messages
                result # don't forget to return
            end
            # mandatory
            def failure_message_for_should
                &quot;expected #{@it} to be similar to #{@that}&quot;
            end
            # optional
            def failure_message_for_should_not
                &quot;expected #{@it} to be different from #{@that}&quot;
            end
            #optional
            def description
                &quot;#{@it} should be similar to #{@that}&quot;
            end
        end
        
        #define method on example (see set-up to incude in all examples)
        def similar_to(that)
            SimilarTo.new(that)
        end
    end # custom matchers
    
    
    
    
    context &quot;macros&quot; do
        module ControllerMacros     
          def should_render(template)
            it &quot;should render the #{template} template&quot; do
              do_request
              response.should render_template(template)
            end
          end

          def should_assign(hash)
            variable_name = hash.keys.first
            model, method = hash[variable_name]
            model_access_method = [model, method].join('.')
            it &quot;should assign @#{variable_name} =&gt; #{model_access_method}&quot; do
              expected = &quot;the value returned by #{model_access_method}&quot;
              model.should_receive(method).and_return(expected)
              do_request
              assigns[variable_name].should == expected
            end
          end

          def get(action)
            define_method :do_request do
              get action
            end
            yield
          end
        end

        RSpec.configure do |config|
          config.use_transactional_fixtures = true
          config.use_instantiated_fixtures  = false
          config.fixture_path = RAILS_ROOT + '/spec/fixtures/'
          config.extend(ControllerMacros, :type =&gt; :controller)
        end     
    end # macros
    
end # module</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Fix Octopress Pygments Error on Arch Linux]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/"/>
    <updated>2011-09-21T18:28:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux</id>
    <content type="html"><![CDATA[<p>If your get following pygments error using octopress with arch linux.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Building site: source -&gt; public
</span><span class='line'>  File &quot;&lt;string&gt;&quot;, line 1
</span><span class='line'>    import sys; print sys.executable
</span><span class='line'>                        ^
</span><span class='line'>SyntaxError: invalid syntax
</span></code></pre></td></tr></table></div></figure>


<p>It&#8217;s happens because RubyPython use Python version 2 by calling &#8220;python&#8221; command. By default python equal to python3 in Arch Linux.</p>

<p>For fix simple add ruby file to plugins directory with following code.</p>

<figure class='code'><figcaption><span>ruby_python_arch_linux_fix.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RubyPython</span><span class="o">.</span><span class="n">configure</span> <span class="ss">:python_exe</span> <span class="o">=&gt;</span> <span class="s1">&#39;python2.7&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also if you get following lib.so related error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>LoadError: Could not open library &#39;lib.so&#39;: lib.so: cannot open shared object file: No such file or directory
</span></code></pre></td></tr></table></div></figure>


<p>You can find solution <a href="https://github.com/tmm1/pygments.rb/issues/10">here</a>.</p>

<p><a href="https://github.com/tmm1/pygments.rb/issues/7#issuecomment-2154024">via</a></p>

<h3>Update</h3>

<p>Another Workaround:
edit &#8220;vendor/bundle/ruby/1.9.1/gems/rubypython-0.5.3/lib/rubypython/pythonexec.rb&#8221; file (path might be different for you)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">--</span> <span class="mi">31</span> <span class="vi">@library</span> <span class="o">=</span> <span class="n">find_python_lib</span>
</span><span class='line'><span class="o">++</span> <span class="mi">31</span> <span class="vi">@library</span> <span class="o">=</span> <span class="s2">&quot;/usr/lib/libpython2.7.so&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="mi">126</span> <span class="sx">%x(</span><span class="si">#{</span><span class="vi">@python</span><span class="si">}</span><span class="sx"> -c &quot;</span><span class="si">#{</span><span class="n">command</span><span class="si">}</span><span class="sx">&quot;)</span><span class="o">.</span><span class="n">chomp</span> <span class="k">if</span> <span class="vi">@python</span>
</span><span class='line'><span class="o">++</span> <span class="mi">126</span> <span class="sx">%x(&quot;</span><span class="si">#{</span><span class="vi">@python</span><span class="si">}</span><span class="sx"> -c </span><span class="si">#{</span><span class="n">command</span><span class="si">}</span><span class="sx">&quot;)</span><span class="o">.</span><span class="n">chomp</span> <span class="k">if</span> <span class="vi">@python</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing opkg Package Manager on Android (mc, rsync, screen, htop, zip, busybox, tree)]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/19/install-opkg-package-manager-on-android-mc/"/>
    <updated>2011-09-19T17:54:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/19/install-opkg-package-manager-on-android-mc</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Install adb</h2>

<h3>Installing adb on arch linux</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yaourt -S adb
</span></code></pre></td></tr></table></div></figure>


<h2>Running adb</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb <span class="nb">kill</span>-server
</span><span class='line'>sudo adb start-server
</span><span class='line'>adb shell
</span></code></pre></td></tr></table></div></figure>


<h2>Installing opkg</h2>

<p>Now run in adb shell following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /sdcard
</span><span class='line'>wget http://dl.dropbox.com/u/4109351/soft/android/opkg-bootstrap-v2.tar.bz2
</span><span class='line'><span class="nb">cd</span> /
</span><span class='line'>tar xjf /sdcard/opkg-bootstrap-v2.tar.bz2
</span><span class='line'><span class="c"># for non cyanogen users</span>
</span><span class='line'>wget http://dl.dropbox.com/u/4109351/soft/android/opkg.conf -O /data/local/opkg.conf
</span><span class='line'><span class="c"># for cyanogen users</span>
</span><span class='line'>wget http://dl.dropbox.com/u/4109351/soft/android/opkg_cyanogen.conf -O /data/local/opkg.conf
</span><span class='line'><span class="c"># add /data/xbin to your path</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/data/xbin:$PATH&quot;</span>
</span><span class='line'><span class="c"># make /system writable</span>
</span><span class='line'>mount -o remount,rw /system
</span><span class='line'>opkg install /sdcard/opkg_0.1.7+svn519-2_arm.ipk
</span><span class='line'>opkg -f /data/local/opkg.conf update
</span><span class='line'>opkg install opkg
</span><span class='line'>mount -o remount,ro /system
</span></code></pre></td></tr></table></div></figure>


<h2>Opkg usage</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>opkg install rsync
</span><span class='line'>opkg remove rsync
</span><span class='line'><span class="c"># list installed packages</span>
</span><span class='line'>opkg list_installed
</span><span class='line'><span class="c"># list files belonging to package</span>
</span><span class='line'>opkg files rsync
</span></code></pre></td></tr></table></div></figure>


<h2>Available packages</h2>

<ul>
<li>rsync - Lightweight package management system.</li>
<li>htop - Interactive processes viewer.</li>
<li>mc - Midnight Commander - a powerful file manager.</li>
<li>zip - Archiver for .zip files.</li>
<li>tree - Tree is a recursive directory listing program.</li>
<li>busybox - Tiny utilities for small and embedded systems.</li>
<li>dropbear - Lightweight SSH2 server and client.</li>
<li>nano - Free Pico clone with some new features.</li>
<li>opkg - Lightweight package management system.</li>
<li>screen - Terminal multiplexor with VT100/ANSI terminal emulation.</li>
<li>terminfo - Basic terminal type definitions.</li>
<li>zip - Archiver for .zip files.</li>
</ul>


<p><a href="http://android.modaco.com/topic/299984-linux-tools-coming-to-mcr/">via</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux + Rvm + Zsh Fix]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/15/tmux---rvm---zsh-fix/"/>
    <updated>2011-09-15T14:52:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/15/tmux&#8212;rvm&#8212;zsh-fix</id>
    <content type="html"><![CDATA[<p>If you have throuble with tmux and rvm default simple add following to end of your .zshrc file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[[</span> <span class="nv">$TERM</span> <span class="o">=</span> <span class="s2">&quot;screen&quot;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> rvm use default
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone.js + Ruby on Rails Tips]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/03/backbone-js---ruby-on-rails-tips/"/>
    <updated>2011-09-03T10:05:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/03/backbone-js&#8212;ruby-on-rails-tips</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li>Add initializer that disable sending data in namespaces in json.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">include_root_in_json</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># {&quot;post&quot;: {&quot;title&quot;: &quot;some title&quot;, &quot;content&quot;: &quot;some content&quot;}}</span>
</span><span class='line'><span class="c1"># will be</span>
</span><span class='line'><span class="c1"># {&quot;title&quot;: &quot;some title&quot;, &quot;content&quot;: &quot;some content}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Use attr_accessible for filtering attributes in mass assigments from backbone. In rails > 3.1 you can use attr_accessible with :as => role.</li>
<li>Use <a href="https://github.com/josevalim/inherited_resources">inherited resources</a> for faster development.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Collection of Usefull Vim Plugins]]></title>
    <link href="http://gonzih.github.com/blog/2011/08/03/collection-of-usefull-vim-plugins/"/>
    <updated>2011-08-03T21:03:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/08/03/collection-of-usefull-vim-plugins</id>
    <content type="html"><![CDATA[<p>Plugins that make your vim better.</p>

<!-- more -->


<p><a href="https://github.com/gmarik/vundle">Vundle</a>
 - Manage your vim plugins in bundler style.</p>

<p><a href="https://github.com/vim-scripts/The-NERD-tree">The NERD Tree</a>
 - Shows directory files tree in the left tab, allows make file operations.</p>

<p><a href="https://github.com/vim-scripts/The-NERD-Commenter">The NERD Commenter</a>
 - Allows easy comment code in different languages.</p>

<p><a href="https://github.com/mrtazz/molokai.vim">Molokai theme</a>
 - TextMate monokai theme for vim.</p>

<p><a href="https://github.com/vim-ruby/vim-ruby">Vim Ruby</a>
 - Collection of plugins for ruby development in vim.</p>

<p><a href="https://github.com/vim-scripts/AutoComplPop">AutoComplPop</a>
 - Automaticaly opens completions popup.</p>

<p><a href="https://github.com/tpope/vim-haml">Vim Haml</a>
 - Adds HAML support to vim.</p>

<p><a href="https://github.com/msanders/snipmate.vim">Snipmate</a>
 - TextMate snippets in vim.</p>

<p><a href="https://github.com/Gonzih/vim-snipmate-ruby-snippets">Snipmate ruby snippets</a>
 - Additional ruby snippets for snipmate that not duplicate default snipmate snippets.</p>

<p><a href="https://github.com/ervandew/supertab">Supertab</a>
 - Perform all your vim insert mode completions with Tab.</p>

<p><a href="https://github.com/trapd00r/neverland-vim-theme">Neverland theme</a>
 - My favorite gvim theme.</p>

<p><a href="https://github.com/vim-scripts/simplefold">Simplefold</a>
 - Optimized, configurable folds that support ruby, perl, java, php.</p>

<p><a href="https://github.com/kchmck/vim-coffee-script">Vim Coffeescript</a>
 - Coffeescript support.</p>

<p><a href="https://github.com/tpope/vim-cucumber">Vim Cucumber</a>
 - Cucumber scenarios highlighting.</p>

<p><a href="https://github.com/tpope/vim-endwise">Endwise</a>
 - Automaticaly adds end in ruby.</p>

<p><a href="https://github.com/tpope/vim-fugitive">Fugitive</a>
 - Awesome git wrapper for vim.</p>

<p><a href="https://github.com/Bogdanp/rbrepl.vim">rbrepl</a>
 - Run irb in vim session.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Rails Apps Template]]></title>
    <link href="http://gonzih.github.com/blog/2011/08/03/my-rails-apps-template/"/>
    <updated>2011-08-03T13:29:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/08/03/my-rails-apps-template</id>
    <content type="html"><![CDATA[<p>Here is my rails template that i use for my projects. With BDD gems, optional resque for deloyed jobs, kaminari for pagination, carriervawe as paperclip replacement.</p>

<!-- more -->


<div><script src='https://gist.github.com/940407.js?file='></script>
<noscript><pre><code># for 3.0 rails

# create rvmrc file
create_file &quot;.rvmrc&quot;, &quot;rvm 1.9.2&quot;

gem &quot;jquery-rails&quot;
gem &quot;postgres&quot;
#gem &quot;kaminari&quot;
#gem &quot;carrierwave&quot;
#gem &quot;resque&quot;
gem &quot;yaml_db&quot;, :require =&gt; false

#group :development
gem &quot;nifty-generators&quot;,  :group =&gt; :development
gem &quot;annotate&quot;,          :group =&gt; :development, :require =&gt; false
gem &quot;capistrano&quot;,        :group =&gt; :development, :require =&gt; false
gem &quot;capistrano_colors&quot;, :group =&gt; :development, :require =&gt; false

#group :test
gem &quot;capybara&quot;,         :group =&gt; :test
gem &quot;fabrication&quot;,      :group =&gt; :test
gem &quot;ffaker&quot;,           :group =&gt; :test
gem &quot;launchy&quot;,          :group =&gt; :test
gem &quot;database_cleaner&quot;, :group =&gt; :test
gem &quot;fakeweb&quot;,          :group =&gt; :test
gem &quot;timecop&quot;,          :group =&gt; :test
gem &quot;email_spec&quot;,       :group =&gt; :test
gem &quot;guard-rspec&quot;,      :group =&gt; :test

gem &quot;rspec-rails&quot;, :group =&gt; [ :development, :test ]

gem &quot;whenever&quot;,   :group =&gt; [ :development, :production ], :require =&gt; false
gem &quot;capistrano&quot;, :group =&gt; [ :development, :production ], :require =&gt; false

run &quot;bundle install --path vendor/bundle&quot;

generate &quot;rspec:install&quot;
run &quot;bundle exec guard init rspec&quot;
remove_file &quot;public/javascripts/rails.js&quot; # jquery-rails replaces this
generate &quot;jquery:install --ui&quot;
run &quot;echo '--format documentation' &gt;&gt; .rspec&quot;
# clean up rails defaults
remove_file &quot;public/index.html&quot;
remove_file &quot;rm public/images/rails.png&quot;


#files injections
inject_into_file &quot;config/application.rb&quot;, :after =&gt; &quot;config.filter_parameters += [:password]&quot; do
  &lt;&lt;-eos
    # Customize generators
    config.generators do |g|
      g.stylesheets false
      g.test_framework      :rspec, :fixture =&gt; true
      g.fixture_replacement :fabrication
    end
  eos
end

inject_into_file &quot;spes/spec_helper.rb&quot;, :after =&gt; &quot;RSpec.configure do |config|&quot; do
  &lt;&lt;-eos
    config.before(:suite) do
      DatabaseCleaner.strategy = :truncation
    end

    config.before(:each) do
      DatabaseCleaner.clean
    end

  eos
end

inject_into_file &quot;spes/spec_helper.rb&quot;, :after =&gt; &quot;require 'rspec/rails'&quot; do
  &lt;&lt;-eos
    require &quot;email_spec&quot;
  eos
end

inject_into_file &quot;spes/spec_helper.rb&quot;, :after =&gt; &quot;RSpec.configure do |config|&quot; do
  &lt;&lt;-eos
    Spec::Runner.configure do |config|
      config.include(EmailSpec::Helpers)
      config.include(EmailSpec::Matchers)
    end

  eos
end

rake &quot;db:create&quot;, :env =&gt; &quot;development&quot;
rake &quot;db:create&quot;, :env =&gt; &quot;test&quot;
rake &quot;db:migrate&quot;

# commit to git
git :init
git :add =&gt; &quot;.&quot;
git :commit =&gt; &quot;-a -m 'create initial bdd application'&quot;

say &lt;&lt;-eos
  All done!
eos

</code></pre></noscript></div>



]]></content>
  </entry>
  
</feed>
