<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ror | Gonzih's dev blog]]></title>
  <link href="http://gonzih.github.com/blog/categories/ror/atom.xml" rel="self"/>
  <link href="http://gonzih.github.com/"/>
  <updated>2012-09-07T19:01:00+03:00</updated>
  <id>http://gonzih.github.com/</id>
  <author>
    <name><![CDATA[Max Gonzih]]></name>
    <email><![CDATA[iam@gonzih.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Backbone.js + Ruby on Rails Tips]]></title>
    <link href="http://gonzih.github.com/blog/2011/09/03/backbone-js---ruby-on-rails-tips/"/>
    <updated>2011-09-03T10:05:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/09/03/backbone-js---ruby-on-rails-tips</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li>Add initializer that disable sending data in namespaces in json.
``` ruby
ActiveRecord::Base.include_root_in_json = false</li>
</ul>


<h1>{"post": {"title": "some title", "content": "some content"}}</h1>

<h1>will be</h1>

<h1>{"title": "some title", "content": "some content}</h1>

<p>```
* Use attr_accessible for filtering attributes in mass assigments from backbone. In rails > 3.1 you can use attr_accessible with :as => role.
* Use <a href="https://github.com/josevalim/inherited_resources">inherited resources</a> for faster development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Collection of Usefull Vim Plugins]]></title>
    <link href="http://gonzih.github.com/blog/2011/08/03/collection-of-usefull-vim-plugins/"/>
    <updated>2011-08-03T21:03:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/08/03/collection-of-usefull-vim-plugins</id>
    <content type="html"><![CDATA[<p>Plugins that make your vim better.</p>

<!-- more -->


<p><a href="https://github.com/gmarik/vundle">Vundle</a>
 - Manage your vim plugins in bundler style.</p>

<p><a href="https://github.com/vim-scripts/The-NERD-tree">The NERD Tree</a>
 - Shows directory files tree in the left tab, allows make file operations.</p>

<p><a href="https://github.com/vim-scripts/The-NERD-Commenter">The NERD Commenter</a>
 - Allows easy comment code in different languages.</p>

<p><a href="https://github.com/mrtazz/molokai.vim">Molokai theme</a>
 - TextMate monokai theme for vim.</p>

<p><a href="https://github.com/vim-ruby/vim-ruby">Vim Ruby</a>
 - Collection of plugins for ruby development in vim.</p>

<p><a href="https://github.com/vim-scripts/AutoComplPop">AutoComplPop</a>
 - Automaticaly opens completions popup.</p>

<p><a href="https://github.com/tpope/vim-haml">Vim Haml</a>
 - Adds HAML support to vim.</p>

<p><a href="https://github.com/msanders/snipmate.vim">Snipmate</a>
 - TextMate snippets in vim.</p>

<p><a href="https://github.com/Gonzih/vim-snipmate-ruby-snippets">Snipmate ruby snippets</a>
 - Additional ruby snippets for snipmate that not duplicate default snipmate snippets.</p>

<p><a href="https://github.com/ervandew/supertab">Supertab</a>
 - Perform all your vim insert mode completions with Tab.</p>

<p><a href="https://github.com/trapd00r/neverland-vim-theme">Neverland theme</a>
 - My favorite gvim theme.</p>

<p><a href="https://github.com/vim-scripts/simplefold">Simplefold</a>
 - Optimized, configurable folds that support ruby, perl, java, php.</p>

<p><a href="https://github.com/kchmck/vim-coffee-script">Vim Coffeescript</a>
 - Coffeescript support.</p>

<p><a href="https://github.com/tpope/vim-cucumber">Vim Cucumber</a>
 - Cucumber scenarios highlighting.</p>

<p><a href="https://github.com/tpope/vim-endwise">Endwise</a>
 - Automaticaly adds end in ruby.</p>

<p><a href="https://github.com/tpope/vim-fugitive">Fugitive</a>
 - Awesome git wrapper for vim.</p>

<p><a href="https://github.com/Bogdanp/rbrepl.vim">rbrepl</a>
 - Run irb in vim session.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Rails Apps Template]]></title>
    <link href="http://gonzih.github.com/blog/2011/08/03/my-rails-apps-template/"/>
    <updated>2011-08-03T13:29:00+03:00</updated>
    <id>http://gonzih.github.com/blog/2011/08/03/my-rails-apps-template</id>
    <content type="html"><![CDATA[<p>Here is my rails template that i use for my projects. With BDD gems, optional resque for deloyed jobs, kaminari for pagination, carriervawe as paperclip replacement.</p>

<!-- more -->


<p><div><script src='https://gist.github.com/940407.js?file='></script>
<noscript><pre><code># for 3.0 rails

# create rvmrc file
create_file &quot;.rvmrc&quot;, &quot;rvm 1.9.2&quot;

gem &quot;jquery-rails&quot;
gem &quot;postgres&quot;
#gem &quot;kaminari&quot;
#gem &quot;carrierwave&quot;
#gem &quot;resque&quot;
gem &quot;yaml_db&quot;, :require =&gt; false

#group :development
gem &quot;nifty-generators&quot;,  :group =&gt; :development
gem &quot;annotate&quot;,          :group =&gt; :development, :require =&gt; false
gem &quot;capistrano&quot;,        :group =&gt; :development, :require =&gt; false
gem &quot;capistrano_colors&quot;, :group =&gt; :development, :require =&gt; false

#group :test
gem &quot;capybara&quot;,         :group =&gt; :test
gem &quot;fabrication&quot;,      :group =&gt; :test
gem &quot;ffaker&quot;,           :group =&gt; :test
gem &quot;launchy&quot;,          :group =&gt; :test
gem &quot;database_cleaner&quot;, :group =&gt; :test
gem &quot;fakeweb&quot;,          :group =&gt; :test
gem &quot;timecop&quot;,          :group =&gt; :test
gem &quot;email_spec&quot;,       :group =&gt; :test
gem &quot;guard-rspec&quot;,      :group =&gt; :test

gem &quot;rspec-rails&quot;, :group =&gt; [ :development, :test ]

gem &quot;whenever&quot;,   :group =&gt; [ :development, :production ], :require =&gt; false
gem &quot;capistrano&quot;, :group =&gt; [ :development, :production ], :require =&gt; false

run &quot;bundle install --path vendor/bundle&quot;

generate &quot;rspec:install&quot;
run &quot;bundle exec guard init rspec&quot;
remove_file &quot;public/javascripts/rails.js&quot; # jquery-rails replaces this
generate &quot;jquery:install --ui&quot;
run &quot;echo '--format documentation' &gt;&gt; .rspec&quot;
# clean up rails defaults
remove_file &quot;public/index.html&quot;
remove_file &quot;rm public/images/rails.png&quot;


#files injections
inject_into_file &quot;config/application.rb&quot;, :after =&gt; &quot;config.filter_parameters += [:password]&quot; do
  &lt;&lt;-eos
    # Customize generators
    config.generators do |g|
      g.stylesheets false
      g.test_framework      :rspec, :fixture =&gt; true
      g.fixture_replacement :fabrication
    end
  eos
end

inject_into_file &quot;spes/spec_helper.rb&quot;, :after =&gt; &quot;RSpec.configure do |config|&quot; do
  &lt;&lt;-eos
    config.before(:suite) do
      DatabaseCleaner.strategy = :truncation
    end

    config.before(:each) do
      DatabaseCleaner.clean
    end

  eos
end

inject_into_file &quot;spes/spec_helper.rb&quot;, :after =&gt; &quot;require 'rspec/rails'&quot; do
  &lt;&lt;-eos
    require &quot;email_spec&quot;
  eos
end

inject_into_file &quot;spes/spec_helper.rb&quot;, :after =&gt; &quot;RSpec.configure do |config|&quot; do
  &lt;&lt;-eos
    Spec::Runner.configure do |config|
      config.include(EmailSpec::Helpers)
      config.include(EmailSpec::Matchers)
    end

  eos
end

rake &quot;db:create&quot;, :env =&gt; &quot;development&quot;
rake &quot;db:create&quot;, :env =&gt; &quot;test&quot;
rake &quot;db:migrate&quot;

# commit to git
git :init
git :add =&gt; &quot;.&quot;
git :commit =&gt; &quot;-a -m 'create initial bdd application'&quot;

say &lt;&lt;-eos
  All done!
eos

</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
