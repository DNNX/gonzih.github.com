<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Max Gonzih]]></title>
  <link href="http://blog.gonzih.me/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.gonzih.me/"/>
  <updated>2013-08-24T16:55:15+03:00</updated>
  <id>http://blog.gonzih.me/</id>
  <author>
    <name><![CDATA[Max Gonzih ]]></name>
    <email><![CDATA[gonzih@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RSS/Atom reader in Clojure via IMAP]]></title>
    <link href="http://blog.gonzih.me/blog/2013/06/28/rss-slash-atom-reader-in-clojure-via-imap/"/>
    <updated>2013-06-28T10:15:00+03:00</updated>
    <id>http://blog.gonzih.me/blog/2013/06/28/rss-slash-atom-reader-in-clojure-via-imap</id>
    <content type="html"><![CDATA[<h3>Motivation</h3>

<p>Google Reader was shut down and I started looking for alternatives.
And sadly I did not found anything close to Google Reader experience.
There are plenty good alternatives, but all of them suffer from some kind of background noise (social based features, weird hotkeys, weird ui, unusable mobile clients and etc.).
All I wanted was simple to use news reader.</p>

<!-- more -->


<h3>Idea</h3>

<p>Then I found post in the Racket community about storing your feeds in the IMAP folders using "APPEND" command by <a href="http://www.greghendershott.com/2013/05/feeds2gmail.html">Greg Hendershott</a>.
That was it. Simplest possible solution, that I can run on small device or server by cron. I played a little bit with Racket source code and decided to write my own version to do the job.</p>

<h3>Clojure version</h3>

<p>First I implemented my <a href="https://github.com/Gonzih/feeds2imap.rb">prototype in Ruby</a> in few hours. I picked up Ruby because of built-in rss/atom and imap libraries.
I used it for few days and liked it. Simple, reliable solution.
So then I decided to rewrite it in Clojure.
Why Clojure?
Because it's pure fun to use.
I decided to use java.mail framework for message storing and folder manipulations, feedparser-clj to fetch and parse rss/atom feeds and hiccup for templating.
I was really pleased with feedparser-clj in comparison with Ruby built-in library.
java.mail framework was not so bad as I was expecting at first.</p>

<h3>How it works?</h3>

<p>Here is project logic:</p>

<ul>
<li>Fetch folders and urls from feeds file.</li>
<li>Fetch and parse RSS/Atom data from urls.</li>
<li>Select only new items using cache file.</li>
<li>Create required imap folders.</li>
<li>Store new items as email messages.</li>
<li>Mark items as read (put md5 hashes in to the clj file with set of old hashes).</li>
</ul>


<p>It's running now by cron (every hour) on my BeagleBone (using latest ejre version).</p>

<p>Source code is hosted on github <a href="https://github.com/Gonzih/feeds2imap.clj">here</a>. Take a look at project README for usage.</p>

<h3>More implementations</h3>

<ul>
<li><a href="https://github.com/Gonzih/feeds2imap.rb">My Ruby prototype</a></li>
<li><a href="https://github.com/Gonzih/feeds2imap.clj">My Clojure implementation</a></li>
<li><a href="https://github.com/greghendershott/feeds2gmail">Racket implementation</a></li>
<li><a href="https://github.com/cordawyn/rss2imap">Haskell implementation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nice Rspec 2 Syntax Cheat Sheet]]></title>
    <link href="http://blog.gonzih.me/blog/2011/09/22/nice-rspec-2-syntax-cheat-sheet/"/>
    <updated>2011-09-22T21:26:00+03:00</updated>
    <id>http://blog.gonzih.me/blog/2011/09/22/nice-rspec-2-syntax-cheat-sheet</id>
    <content type="html"><![CDATA[<!-- more -->


<p><div><script src='https://gist.github.com/663876.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Fix Octopress Pygments Error on Arch Linux]]></title>
    <link href="http://blog.gonzih.me/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/"/>
    <updated>2011-09-21T18:28:00+03:00</updated>
    <id>http://blog.gonzih.me/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux</id>
    <content type="html"><![CDATA[<p>If your get following pygments error using octopress with arch linux.
``` text
Building site: source -> public
  File "<string>", line 1</p>

<pre><code>import sys; print sys.executable
                    ^
</code></pre>

<p>SyntaxError: invalid syntax
```
It's happens because RubyPython use Python version 2 by calling "python" command. By default python equal to python3 in Arch Linux.</p>

<p>For fix simple add ruby file to plugins directory with following code.
<code>ruby ruby_python_arch_linux_fix.rb
RubyPython.configure :python_exe =&gt; 'python2.7'
</code></p>

<p>Also if you get following lib.so related error:
<code>text
LoadError: Could not open library 'lib.so': lib.so: cannot open shared object file: No such file or directory
</code>
You can find solution <a href="https://github.com/tmm1/pygments.rb/issues/10">here</a>.</p>

<p><a href="https://github.com/tmm1/pygments.rb/issues/7#issuecomment-2154024">via</a></p>

<h3>Update</h3>

<p>Another Workaround:
edit "vendor/bundle/ruby/1.9.1/gems/rubypython-0.5.3/lib/rubypython/pythonexec.rb" file (path might be different for you)
```ruby
-- 31 @library = find_python_lib
++ 31 @library = "/usr/lib/libpython2.7.so"</p>

<p>-- 126 %x(#{@python} -c "#{command}").chomp if @python
++ 126 %x("#{@python} -c #{command}").chomp if @python
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux + Rvm + Zsh Fix]]></title>
    <link href="http://blog.gonzih.me/blog/2011/09/15/tmux---rvm---zsh-fix/"/>
    <updated>2011-09-15T14:52:00+03:00</updated>
    <id>http://blog.gonzih.me/blog/2011/09/15/tmux---rvm---zsh-fix</id>
    <content type="html"><![CDATA[<p>If you have throuble with tmux and rvm default simple add following to end of your .zshrc file.
<code>bash
[[ $TERM = "screen" ]] &amp;&amp; rvm use default
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Collection of Usefull Vim Plugins]]></title>
    <link href="http://blog.gonzih.me/blog/2011/08/03/collection-of-usefull-vim-plugins/"/>
    <updated>2011-08-03T21:03:00+03:00</updated>
    <id>http://blog.gonzih.me/blog/2011/08/03/collection-of-usefull-vim-plugins</id>
    <content type="html"><![CDATA[<p>Plugins that make your vim better.</p>

<!-- more -->


<p><a href="https://github.com/gmarik/vundle">Vundle</a>
 - Manage your vim plugins in bundler style.</p>

<p><a href="https://github.com/vim-scripts/The-NERD-tree">The NERD Tree</a>
 - Shows directory files tree in the left tab, allows make file operations.</p>

<p><a href="https://github.com/vim-scripts/The-NERD-Commenter">The NERD Commenter</a>
 - Allows easy comment code in different languages.</p>

<p><a href="https://github.com/mrtazz/molokai.vim">Molokai theme</a>
 - TextMate monokai theme for vim.</p>

<p><a href="https://github.com/vim-ruby/vim-ruby">Vim Ruby</a>
 - Collection of plugins for ruby development in vim.</p>

<p><a href="https://github.com/vim-scripts/AutoComplPop">AutoComplPop</a>
 - Automaticaly opens completions popup.</p>

<p><a href="https://github.com/tpope/vim-haml">Vim Haml</a>
 - Adds HAML support to vim.</p>

<p><a href="https://github.com/msanders/snipmate.vim">Snipmate</a>
 - TextMate snippets in vim.</p>

<p><a href="https://github.com/Gonzih/vim-snipmate-ruby-snippets">Snipmate ruby snippets</a>
 - Additional ruby snippets for snipmate that not duplicate default snipmate snippets.</p>

<p><a href="https://github.com/ervandew/supertab">Supertab</a>
 - Perform all your vim insert mode completions with Tab.</p>

<p><a href="https://github.com/trapd00r/neverland-vim-theme">Neverland theme</a>
 - My favorite gvim theme.</p>

<p><a href="https://github.com/vim-scripts/simplefold">Simplefold</a>
 - Optimized, configurable folds that support ruby, perl, java, php.</p>

<p><a href="https://github.com/kchmck/vim-coffee-script">Vim Coffeescript</a>
 - Coffeescript support.</p>

<p><a href="https://github.com/tpope/vim-cucumber">Vim Cucumber</a>
 - Cucumber scenarios highlighting.</p>

<p><a href="https://github.com/tpope/vim-endwise">Endwise</a>
 - Automaticaly adds end in ruby.</p>

<p><a href="https://github.com/tpope/vim-fugitive">Fugitive</a>
 - Awesome git wrapper for vim.</p>

<p><a href="https://github.com/Bogdanp/rbrepl.vim">rbrepl</a>
 - Run irb in vim session.</p>
]]></content>
  </entry>
  
</feed>
